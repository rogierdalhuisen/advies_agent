version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.9.5
    container_name: advies_agent_qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    networks:
      - agent_network

  # Python LLM Agent Application
  agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: advies_agent_app
    depends_on:
      qdrant:
        condition: service_healthy
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_GRPC_PORT=6334
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    volumes:
      # Mount source code for development (comment out for production)
      - ./src:/app/src
      - ./main.py:/app/main.py
      # Persistent storage for logs and data
      - agent_data:/app/data
      - agent_logs:/app/logs
    ports:
      - "8000:8000"  # Expose agent API port if needed
    restart: unless-stopped
    networks:
      - agent_network
    # Uncomment and modify the command if you want to override the default
    # command: python main.py

volumes:
  qdrant_storage:
    driver: local
  agent_data:
    driver: local
  agent_logs:
    driver: local

networks:
  agent_network:
    driver: bridge
